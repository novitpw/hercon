/**      ___  __   __   __
 * |__| |__  |__) /  ' /  \ |\ |
 * |  | |___ |  \ \__. \__/ | \|
 *
 * @copyright ¬© 2022 hepller
 */

// –ê–ª–∏–∞—Å—ã –∫–æ–º–∞–Ω–¥—ã
const aliases = ['send', '–æ—Ç–ø—Ä–∞–≤–∏—Ç—å' 's']

// –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
const description = '–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä'

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
const usage = '<–Ω–∞–∑–≤–∞–Ω–∏–µ> <–∫–æ–º–∞–Ω–¥–∞>'

// –§—É–Ω–∫—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã
async function execute(ctx, {Logger, Rcon, db}) {

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
  if (!ctx.args[0]) return ctx.reply('‚õî –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞')

  // –ü–æ–∏—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –≤ –ë–î
  const server = db.data.servers.find(server => server.name == ctx.args[0])

  // –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞
  if (!server) return ctx.reply(`‚ö† –°–µ—Ä–≤–µ—Ä–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º <<${ctx.args[0]}>> –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`)

  // –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –≤ –∫–æ–º–∞–Ω–¥—É
  const command = ctx.args.slice(1).join(' ')

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã
  if (!command) return ctx.reply('‚õî –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä')

  // –°–æ–∑–¥–∞–Ω–∏–µ RCON
  const rcon = new Rcon(server.host, server.port, server.password)

  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É
  rcon.connect()

  // –û–∂–∏–¥–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ -> –æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä
  rcon.on('auth', () => rcon.send(command))

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞
  rcon.on('response', response => {

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    ctx.reply([
      'üíæ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:',
      '',
      response.replace(/¬ß./g, '') || ctx.fields_placeholder
    ].join('\n'))

    // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
    rcon.disconnect()
  })

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
  rcon.on('error', error => {

    // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
    Logger.logError(error.stack)

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    ctx.reply(`‚ö† –ü—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä <<${ctx.args[0]}>> –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞, –≤–æ–∑–º–æ–∂–Ω–æ —Å–µ—Ä–≤–µ—Ä –≤—ã–∫–ª—é—á–µ–Ω`)
  })
}

// –≠–∫—Å–ø–æ—Ä—Ç –∫–æ–º–∞–Ω–¥—ã
export default {aliases, description, usage, execute}